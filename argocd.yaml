apiVersion: v1
kind: Service
metadata:
  name: argocd-server
  namespace: prod
spec:
  selector:
    app.kubernetes.io/name: argocd-server
  ports:
    - name: http
      port: 80
      targetPort: 8080
      nodePort: 30080
  type: NodePort

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: argocd-application-controller-endpoints-access
subjects:
  - kind: ServiceAccount
    name: argocd-application-controller
    namespace: prod
roleRef:
  kind: ClusterRole
  name: cluster-admin  # Grants full cluster-wide access (use with caution)
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: argocd-server-role
  namespace: prod
rules:
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "watch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: argocd-server-rolebinding
  namespace: prod
subjects:
  - kind: ServiceAccount
    name: argocd-server
    namespace: prod
roleRef:
  kind: Role
  name: argocd-server-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: argocd-application-controller-role
  namespace: prod
rules:
  - apiGroups: [""]
    resources: ["pods", "services", "endpoints", "configmaps", "secrets"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["apps"]
    resources: ["deployments", "statefulsets", "replicasets"]
    verbs: ["get", "list", "watch", "update", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: argocd-application-controller-rolebinding
  namespace: prod
subjects:
  - kind: ServiceAccount
    name: argocd-application-controller
    namespace: prod
roleRef:
  kind: Role
  name: argocd-application-controller-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: argocd-server-clusterrolebinding
subjects:
  - kind: ServiceAccount
    name: argocd-server
    namespace: prod
roleRef:
  kind: ClusterRole
  name: cluster-admin  # Grants full cluster-wide access (use with caution)
  apiGroup: rbac.authorization.k8s.io

